package base

/*
源码文件分类：
命令源码文件、库源码文件、测试源码文件

库源码文件:
是不能被直接运行的的源码文件，它仅用于存放程序实体，这些程序实体可以被其他代码使用。（只要遵从Go语言规范的话）


程序实体：
变量、常量、函数、结构体、接口

标识符：实体的名字
组成部分 字母、数字、下划线，但首字母不是是数字（注：中文也可以，但是团队会拒绝）

包名：
源文件声明的包名可以与目录名不一样，但是同一个目录下所有文件声明的包名必须一样

作用域：高内聚，低耦合
一个程序实体的作用域总是会被限制在某个代码块中，而这个作用域最大的用处，就是对程序实体的访问权限的控制

问题1
1.Go 语言的类型推断可以带来哪些好处？
1)敲代码少敲几个字符
2)源头类型发生变化，定义不用变
通过这种类型推断，你可以体验到动态类型编程语言所带来的一部分优势，即程序灵活性的明显提升。但在那些编程语言中，这种提升可以说是用程序的可维护性和运行效率换来的。





*/

import (
	"container/list"
)

func TestMyContainer() {
	l := list.New()
	l.Init()
}
